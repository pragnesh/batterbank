plugins {
	id 'org.springframework.boot' version '2.3.10.RELEASE'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.openapi.generator" version "5.1.0"
}

group = 'com.batter-bank'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
ext['groovy.version'] = '3.0.7'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation 'io.rest-assured:rest-assured:4.3.3'
	testImplementation 'io.rest-assured:rest-assured-common:4.3.3'
	testImplementation 'io.rest-assured:spring-mock-mvc:4.3.3'
	testImplementation 'io.rest-assured:json-path:4.3.3'
	testImplementation 'io.rest-assured:xml-path:4.3.3'

	implementation platform('org.testcontainers:testcontainers-bom:1.15.3') //import bom
	testImplementation "org.testcontainers:testcontainers"
	testImplementation "org.testcontainers:junit-jupiter"
	testImplementation 'org.testcontainers:mysql'

	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.data:spring-data-redis'
	implementation 'io.lettuce:lettuce-core:6.1.1.RELEASE'

	compile "org.springframework.data:spring-data-commons"
	compile "io.springfox:springfox-swagger2:2.9.2"
	compile "io.springfox:springfox-swagger-ui:2.9.2"
	compile "javax.xml.bind:jaxb-api:2.3.1"
	compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
	compile "org.openapitools:jackson-databind-nullable:0.2.1"
	compile "javax.validation:validation-api"
	compile "com.fasterxml.jackson.core:jackson-databind"

}

test {
	useJUnitPlatform()
}
tasks.register('copyAcmeModel', Copy) {
	from "$buildDir/generated/src/main/java/com/acme/banking/model"
	into "src/main/java/com/acme/banking/model"
}

def cleanAcmeModel = tasks.register('cleanAcmeModel', Delete) {
	delete "src/main/java/com/acme/banking/model"
}
tasks.clean.dependsOn(cleanAcmeModel)

openApiGenerate {
	generatorName = "spring"
	inputSpec = "$rootDir/open-api/account-info-openapi.yaml".toString()
	outputDir = "$buildDir/generated".toString()
	invokerPackage = "com.acme.banking.invoker"
	modelPackage = "com.acme.banking.model"
	apiPackage = "com.acme.banking.api"
}
